generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

enum BOOLOPTIONS {
  Si
  No
}

model User {
  id                         String            @id @default(uuid())
  name                       String
  instagram                  String            @unique
  web                        String            @default("Sin Web")
  email                      String            @unique
  whatsapp                   String            @unique
  age                        String
  country                    String
  referredBy                 String
  businessAgeAndSatisfaction String
  tokens                     AccessInfoToken[]
  surveys                    Business[]
}

model AccessInfoToken {
  id       Int       @id @default(autoincrement())
  token    String    @unique
  isUsed   Boolean   @default(false)
  userId   String?
  User     User?     @relation(fields: [userId], references: [id])
  Business Business?

  @@index([userId])
}

// Define the data model for the business
model Business {
  id Int @id @default(autoincrement())

  businessInfo         BusinessInfo?       @relation(fields: [businessInfoId], references: [id])
  subjectiveAnalysis   SubjectiveAnalysis? @relation(fields: [subjectiveAnalysisId], references: [id])
  financialAnalysis    FinancialAnalysis?  @relation(fields: [financialAnalysisId], references: [id])
  feedback             Feedback?           @relation(fields: [feedbackId], references: [id])
  businessInfoId       Int?                @unique
  subjectiveAnalysisId Int?                @unique
  financialAnalysisId  Int?                @unique
  feedbackId           Int?                @unique
  User                 User?               @relation(fields: [userId], references: [id])
  userId               String?
  token                AccessInfoToken?    @relation(fields: [accessInfoTokenId], references: [id])
  accessInfoTokenId    Int?                @unique

  @@index([userId, accessInfoTokenId, businessInfoId, financialAnalysisId, subjectiveAnalysisId])
}

// Define the data model for the business information
model BusinessInfo {
  id                      Int       @id @default(autoincrement())
  historyAndVision        String    @db.Text
  businessType            String    @db.Text
  businessModel           String    @db.Text
  mainProduct             String    @db.Text
  competitiveAdvantage    String    @db.Text
  marketResearch          String    @db.Text
  marketingPlan           String    @db.Text
  accountant              String    @db.Text
  financialSeparation     String    @db.Text
  technologySoftware      String    @db.Text
  financialConsultant     String    @db.Text
  objectives              String    @db.Text
  challenges              String    @db.Text
  mainAspectsToImprove    String    @db.Text
  administrationChallenge String    @db.Text
  employees               String    @db.Text
  audits                  String    @db.Text
  advertising             String    @db.Text
  adMetrics               String?   @default("-")
  salesProjections        String    @db.Text
  Business                Business?
}

// Define the data model for the subjective analysis
model SubjectiveAnalysis {
  id                      Int       @id @default(autoincrement())
  financialKnowledge      String    @db.Text
  accountingKnowledge     String    @db.Text
  financialTraining       String    @db.Text
  partnerStatus           String    @db.Text
  delegation              String    @db.Text
  delegatedAreas          String    @default("-") @db.Text
  emotionalExperience     String    @db.Text
  missedOpportunity       String    @db.Text
  suddenGrowth            String    @db.Text
  childhoodExperience     String    @db.Text
  emotionalEvaluation     String    @db.Text
  longTermCommitment      String    @db.Text
  financialRiskTolerance  String    @db.Text
  financialDecisionMaking String    @db.Text
  Business                Business?
}

// Define the data model for the financial analysis
model FinancialAnalysis {
  id                       Int       @id @default(autoincrement())
  financialPolicy          String    @db.Text
  financialIndicators      String    @db.Text
  profitabilityMetrics     String    @db.Text
  currencyMeasurement      String    @db.Text
  inflationMitigation      String    @db.Text
  financialAccounts        String    @db.Text
  ownerCompensation        String    @db.Text
  budgeting                String    @db.Text
  costStructure            String    @db.Text
  emergencyFund            String    @db.Text
  breakevenAnalysis        String    @db.Text
  debtManagement           String    @db.Text
  liquidityMeasurement     String    @db.Text
  financialStatements      String    @db.Text
  inventoryTracking        String    @db.Text
  trackingMethod           String?   @default("-")
  externalFinancing        String    @db.Text
  growthTransitionPlan     String    @db.Text
  financialConsultantPlan  String    @db.Text
  extraCommentAboutCompany String?   @default("-") @db.Text
  Business                 Business?
}

// Define the data model for the feedback
model Feedback {
  id                     Int         @id @default(autoincrement())
  comprehensiveDiagnosis String      @db.Text
  surprisingAspects      String      @db.Text
  newLearnings           String      @db.Text
  suggestions            String      @db.Text
  recommendSession       BOOLOPTIONS @default(Si)
  Business               Business?
}
