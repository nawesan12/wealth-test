generator client {
  provider = "prisma-client-js"
}

generator dbml {
  provider = "prisma-dbml-generator"
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

enum Referece {
  SOCIAL
  AMIGO
  BUSQUEDA
  CONFERENCIA
  PUBLICIDAD
}

model User {
  id                         String            @id @default(uuid())
  name                       String
  instagram                  String            @unique
  web                        String            @unique
  email                      String            @unique
  whatsapp                   String            @unique
  age                        String
  country                    String
  referredBy                 String
  businessAgeAndSatisfaction String
  tokens                     AccessInfoToken[]
  surveys                    Business[]
}

model AccessInfoToken {
  id       Int       @id @default(autoincrement())
  token    String    @unique @default(uuid())
  userId   String?
  User     User?     @relation(fields: [userId], references: [id])
  Business Business?

  @@index([userId])
}

// Define the data model for the business
model Business {
  id Int @id @default(autoincrement())

  businessInfo         BusinessInfo?       @relation(fields: [businessInfoId], references: [id])
  subjectiveAnalysis   SubjectiveAnalysis? @relation(fields: [subjectiveAnalysisId], references: [id])
  financialAnalysis    FinancialAnalysis?  @relation(fields: [financialAnalysisId], references: [id])
  feedback             Feedback?           @relation(fields: [feedbackId], references: [id])
  businessInfoId       Int?                @unique
  subjectiveAnalysisId Int?                @unique
  financialAnalysisId  Int?                @unique
  feedbackId           Int?                @unique
  User                 User?               @relation(fields: [userId], references: [id])
  userId               String?
  token                AccessInfoToken?    @relation(fields: [accessInfoTokenId], references: [id])
  accessInfoTokenId    Int?                @unique

  @@index([userId])
}

// Define the data model for the business information
model BusinessInfo {
  id                      Int       @id @default(autoincrement())
  historyAndVision        String
  businessType            String
  businessModel           String
  businessOffering        String
  mainProduct             String
  competitiveAdvantage    String
  marketResearch          String
  marketingPlan           String
  accountant              String
  financialSeparation     String
  technologySoftware      String
  financialConsultant     String
  objectives              String
  challenges              String
  mainAspectsToImprove    String
  administrationChallenge String
  employees               String
  audits                  String
  advertising             String
  salesProjections        String
  Business                Business?
}

// Define the data model for the subjective analysis
model SubjectiveAnalysis {
  id                      Int       @id @default(autoincrement())
  financialKnowledge      String
  accountingKnowledge     String
  financialTraining       String
  partnerStatus           String
  delegation              String
  emotionalExperience     String
  missedOpportunity       String
  suddenGrowth            String
  childhoodBeliefs        String
  childhoodExperience     String
  lifeIncidents           String
  emotionalEvaluation     String
  longTermCommitment      String
  financialRiskTolerance  String
  financialDecisionMaking String
  Business                Business?
}

// Define the data model for the financial analysis
model FinancialAnalysis {
  id                      Int       @id @default(autoincrement())
  financialPolicy         String
  financialIndicators     String
  profitabilityMetrics    String
  currencyMeasurement     String
  inflationMitigation     String
  financialAccounts       String
  ownerCompensation       String
  budgeting               String
  costStructure           String
  emergencyFund           String
  breakevenAnalysis       String
  debtManagement          String
  liquidityMeasurement    String
  financialStatements     String
  inventoryTracking       String
  externalFinancing       String
  growthTransitionPlan    String
  financialConsultantPlan String
  Business                Business?
}

// Define the data model for the feedback
model Feedback {
  id                     Int       @id @default(autoincrement())
  comprehensiveDiagnosis String
  feelings               String
  surprisingAspects      String
  newLearnings           String
  highlights             String
  suggestions            String
  recommendSession       String
  Business               Business?
}
